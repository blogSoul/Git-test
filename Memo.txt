2019-11-21
*데이터문제해결및실습
 클러스터링 할 수 있도록 하자! 
 그룹으로 추천해주는게 훨씬 쉽다. 

 clustering 한 후에 aggregation(통합하다) methods를 사용해야 한다.
 Multiplicative은 많이 안 쓰이는 이유는 overflow, underflow가 발생한다. 
 평균을 쓰는 것이 훨씬 좋다. 
 실제 데이터에센 최고점 데이터가 있다.
 AV예제에선 4이상일 떄를 뽑았다.
 borda count 확인하기! 
 CR은 편균 평점이 높은지 낮은지 확인하는 것 
 MR은 비교 결과로 쓰이긴 쉽지만 영향력을 보면 좋다.
 graph theory
 google의 탄생배경인 알고리즘 : page rank algorithm 트위터 구조랑 비슷하다. 
 얼마나 큰 노드를 나누는가 얼마나 많은 노드를 받았는가 
 편차를 고려한다. AwM을 보고서 다수의 이용자가 만족할 수 있도록 한다.
 Least Misery는 negative한 평점을 받은 아이템을 빼버린다.
 Fa2 에서 최소값에서 편차* 특정 가중치를 빼준다.
 가중치를 (1- 표준편차)로 해야 할 것입니다. 
 시험에 나올 예정 

*데이터 시각화
 빨간색 계속바다가 다른 거보면 녹색 
 노란색은 조금 특이하다.
 보색인 관계는 정말 잘 띈다.
 색상의 표가 존재한다.
 Hue : 색상 
 vlaue : 밝기 Chroma : 채도
 색을 느끼는 기준: 재질의 색깔 * 빛의 색깔
 Simultaneous Contrast : Bezold effect
 Spreading
 색의 구분은 그 나라 언어가 어떻게 구성되는지에 따라 많이 달라진다. 
 Evolution of Basic Color Terms
 Hints for the colorist
'''
• Use only a few colors (~6 ideal) : 많이 쓰지 말아라
• Colors should be distinctive and named : 애매한 색깔은 되도록 쓰지 말기
• Strive for color harmony (natural colors?)
• Use cultural conventions; appreciate symbolism
• Beware of bad interactions (red/blue etc.)
• Get it right in black and white
• Respect the color blind
'''
 rainbow color는 되도록 쓰지 말 것 
 정말 어렵다.
'''
Classing quantitative data
1. Equal interval (arithmetic progression)
2. Quantiles (recommended)
3. Standard deviation
4. Classification [Jenks’ “natural breaks”]
5. Equal area
6. Minimal length boundaries
7. Minimal gaps
'''
# http://colorbrewer2.org/#type=qualitative&scheme=Pastel2&n=6 사용해보기
# 가운데는 옅은 색으로 하는 것이 좋다.
# 진한 색이 더 많이 사용되어진다.

2019-11-26
데이터문제해결및실습
 i1 i2 i3
u1 3 4 5
u2 2 5 3
u3 5 2 5
  ->
 i1 i2 i3
i1 x 1 1
i2 -1 x 1
i3 -1 -1 x
수정 필요!\

surprise + 
과제 + 그룹 추천에서 aggregation <- 시험출제 예정
특정 결과값을 만드는 것을 낸다고 합니다!
Conv ReLU Pooling(마지막엔 생략하는 경우도 있습니다.)
Pooling 값을 줄여준다.

n-list데이터 확인하기!

tensor 펙토라이제이션 
stride는 2만큼 이동하는 것을 의미합니다.
channel은 z축 방향으로 얼마나 긴지를 얘기한다.
Pooling: 입력데이터의 변화에도 풀링의 결과는 잘 변하지 않음(Robustness)

데이터시각화

자기 의견을 추가하지 않는다. 
데이터 안에 있는 내용으로만 데이터를 만들 수 있도록 합니다.
교통사고하면 가해자를 조금 더 생각해봐야 할거 같다!

2019-12-03 데이터문제해결및실습
딥러닝 실습예제는 안 나옵니다!
모두의 딥러닝 강의 한번 보기!
the deep learning book
드롭아웃
전반적인 코드는 7단원 위주로 낸다.
ICML
CVPR : 이미지 처리쪽 학회
GAN 알고리즘 : 학습 데이터를 만들어주는 알고리즘 
TREC : 텍스트 경연 대회
병목현상을 줄이기 위해서 메모리 용량와 버스 대역폭을 고려해야 한다.
추천시스템 
surprise : 나올 수 없다 
그룹 추천 : 문제 내기 쉽다.
coperand 틀린 부분 다시 확인하기!
평가기법 : 문제 내기 쉽다.
MAP = 1.8 / 4
P@1 P@2 P@3 P@4
0.2 0.2 0.6 0.8
확인하기!
NDCG 확인하기! RMSG 확인하기!

데이터시각화
시스템 개발할 때,
알고리즘도 생각해야 한다. local에서 할 건가 아님 알고리즘을 줘서 할건가 아님 어떤 언어(python,R 등등)로 
할지 생각해봐야 합니다!
웹으로 하면 고급 렌더링하면 어렵다(그림자로 하는게 힘들다.)
PC에서 install하는게 있는지 없는지 확인해 봐야 한다.
genealogy and social networks 추천 
link의 색깔, 두께 등등으로 인코딩 
Node크기에 따라 달라질 수도 있다 
Slice & Dice layout로 나오면 면적 교하기 힘들다. (그래서 정사각형으로 만든다.)
Heuristics한 알고리즘이 많이 존재한다.
edge crossing을 쓰면 안 된다. 
edge가 너무 길면 안 된다.
땡기면 다시 돌아가는 것 - string속성
edge Bundling은 추상적(abstract)한 부분이 존재한다. 
sorting은 경험입니다!
시험주 화요일에 예정!

2019-12-05
8.(1)
5단원부터 8단원까지 
오차역전파 
계산그래프 
어느정도 그린다 정도로! chain rule 이해하기 
미분하는 방법 알기 
덧셈 곱셈 어떻게 되는지 확인하기
시그모이드는 안 낼 생각이지만 relu는 알아야 한다 
sigmoid 4단계는 무조건 확인하기!
affine계층의 미분 부분 확dls 
affine class 확인하기
affine 구조 알아야지 7단원을 알 수 있습니다!
계산 그래프 그리는 법 알기! 
Relu function 확인하기! 
6단원 마지막 overfitting 부분 dropout<-왜 쓰이는지 , 정규화 확인하기
어떻게 하이퍼 파라미터를 구하는지 확인하기

7단원 
파라미터 계산 
하이퍼 파라미터 계산 (x)
하이퍼 갱신하는 방법을 무조건 알아야 한다.
각 방법마다 확인하고 장단점 알아두기 
특징과 장단점 확인하기 <-여기서는 코드 안낸다고 하십니다!
overfitting 방지법 

CNN
추가된 2개의 계층 확인하기 
모든 부분 정확하게 확인하기!
연산하는 과정 확인하기!
im2col의 코드는 안 낼 예정인데 원리는 알 수 있도록한다.
과정이 어떻게 진행되는지 확인할 수 있도록 한다.
cnn class확인하기!
simple 컨굴루션 레이어 확인하기
왜 깊어지는지!
어려가지 cnn기법들 (추가점수)

8단원은 deeplearning의 의미와 
코드는 제출 안한다고 합니다./
층이 깊어지면 효율성이 증가하는 이유
밑에 있는 그림 확인하기

루트나 log함수 numpy로 확인할 줄 알기!
수식이나 계산 과정 확인하기!
precision recall 확인하기!
MA확인하기! 

화요일 기말 시험
KNN평가 기법을 넣어주면 좋다 (최종과제)

2019-12-05 데이터 시각화
evaluate 확인하기!
HCI : 사용자 테스트에 의해서 만들어진다 
dependent variables인 변수를 뺄 수 있도록 합니다.
유저 테스트를 확인해야 한다.

2019-12-10
무의식적으로 하는 것과 다르다.
유저스터디가 제일 어렵다.
visual encoding variables
Multidimensional data

Bar chart : 그래프를 보고 어떤 문제점이 있는지 확인해보도록 하자
Steven's power law: 어떻게 얼마나 반응하는지 확인해보기
interactions: 하이라이트를 넣어줍니다.
graphic:투명하게 하는 것과 안 투명하게 하는 것 확인하기 
cartography: 지도 어떻게 방식으로 써야 하는지 확인해야 한다.
Text processing 확인해야 한다.

color 어떻게 쓰는지 확인하기
Opponent signals: red to green 

graph,tree <- bundling
validation :계속 쓰고 있느지 확인하기 

스토리로 적을 수 있는 것!
USB저장하기!

2019-12-12
데이터 분석가면 근시안적인 시각을 가지면 안된다.

