2019-12-22

client/Server 
Multi -chating < mvc
쓰리티어가 있었는데, mvc가 있다.
model , view, control이 있으면 mvc로 나눌 수 있다.

자료구조는 프로그램 내부에서
file structure는 프로그램 외부에서
대부분 데이터베이스를 이용하고 있다.

dbms에서 간편하게 해주므로 
blocking system call = waiting 
cpu의 이용단위는 thread로 나눠짐 
thread 3가지 상태:  ready , running, block
메모리에 적재되면 실행중에 있는 것과 같다. 
입출력이 일어나면 block상태로 간다.
muti thread로 이루어진다. 
openGL, Node.js이 unblocking system이 사용되어진다. 
->single thread를 사용하면  
request가 오면 파일 처리를 해서 request

스트림은 문자 스트림과 바이트 스트림으로 나누어져 있다.

stream은 시스템 데이터로 사용되어진다.
file에 stream을 붙여야 사용할 수 있다.

GUI에 대해 알아보자 
프론트엔드의 다른 라이브러리를 많이 사용한다 
view를 만드는데 사용한다. 
프론트엔드면 UI,UX 가 매력적(?)
1. 메모장에 UI를 입하는 것
components에는 2가지가 있다.
container - heavyweight - managed by system (O.S) ex. JFrame, JApplet
             - lightweight - managed by programmer ex. jPanel, container
component  - JLabel

layout maneger가 존재한다. 1장 33번 
각 클래스마다 api를 확인하고 사용해야 한다.

eventhandling - listener : 
view와 control로 나눠진다.

구조적->객체지향 -> 함수형, 병렬

java는 jvm위에서 활동한다.
1시 40분 내용 이해하기
component<-refactor
-> event-> eventhandler/method
eventhandler/method를 포함하고 있는 class는 listener class
interface->listener class->implements


implements Listener -> abstart method ->그럼 5가지 다 구현해야 한다.
extents KeyAdapter ->하면 필요한 기능만 구현 가능(다중상속은 불가능)

GUI에 대해 알아보자 
프론트엔드의 다른 라이브러리를 많이 사용한다 
view를 만드는데 사용한다. 
프론트엔드면 UI,UX 가 매력적(?)
1. 메모장에 UI를 입하는 것
components에는 2가지가 있다.
container - heavyweight - managed by system (O.S) ex. JFrame, JApplet
             - lightweight - managed by programmer ex. jPanel, container
component  - JLabel

layout maneger가 존재한다. 1장 33번 
각 클래스마다 api를 확인하고 사용해야 한다.

eventhandling - listener : 
view와 control로 나눠진다.

구조적->객체지향 -> 함수형, 병렬

java는 jvm위에서 활동한다.
1시 40분 내용 이해하기
component<-refactor
-> event-> eventhandler/method
eventhandler/method를 포함하고 있는 class는 listener class
interface->listener class->implements


implements Listener -> abstart method ->그럼 5가지 다 구현해야 한다.
extents KeyAdapter ->하면 필요한 기능만 구현 가능(다중상속은 불가능)

크게 작게
 도움말
 
snake: get_select_memory
카멜체(낙타체): 둘 중 하나로 만들어라 getSelectMemory

java는 class를 설정해서 데이터를 직접 접근할 수 있도록 만든 것을 structure라고 부른다.

2019-12-24
database : DBA
->DBMS(s/w)
JDBS : java와 DB를 만들어준다.
RDB: 관계형 DB <-SQL문
NoSQL : 
몽고DB : oracle, mssql이 있는데 krnyc

server -(connection)-> DB(DBMS) :DB도 서버다!
구조체에서 만드는 것!
탐색을 사용하면 ordered 삭제와 추가가 일어나면 Noordered 
jdbc 프로그램 개발 절차:
1.JDBC 드라이버 로드
2.데이터베이스 연결
3.Statement 생성
4. SQL 문 전송
5. 결과받기
6. 연결해제

(java>(SQL))->or<-(DBMS)->or<-DB

DBMS - connecter - javacode -> DB

MVC란 MVC_1, MVC_2가 뭔지 알아야 한다.
기술 면접 팁 : 모르면 모른다고 얘기한다. 하지만 다른 대안에 대해 말하는게 좋다.
view랑 model의 연결을 끊을려면 control 안에 BL이 필요하다. 
view<->controller(presentation)<->model
mvc, mvp, amvc, 하지만 (mvvm는 다른 의미이다.)

DAO : data access object 
DTO : data getter setter : 데이터가 접근하고 변경하는 권한을 가지고 있다.
VO : data getter : read only

Vector 오후 23분 이전 확인하기

-제목 및 개요
-전체시스템 구조 (MVC)<-optional
-주요기능
-역할분담
(server/client)

2019-12-26

add(int a, int b) <- 변수의 속성까지 고려해준 것이 overloading

부모 : JFrame - add()
자식 : Main - spider() 
->만약 override하면  JFrame a = new Main()
 Main에서 add()를 재정의한다면 a.add()로 작성할 수 있다.

Interface : 동작명세서, 클래스 관점에서 보면 메소드가 강제 정의할 수 있다.
Interface
{변수 public static : 인터페이스

implement 는 Interface를 클래스로 설정할 수 있다.

abstart class로 상속받은 것을 반환받을 수 있다. 비지니스 로직을 다 넣을 수 있다. 

mysql에서 
pre____(sql)
       ______.execute()로 사용하는데 , 이 방법이 중복되므로 abstart class로 만들면 편하다. 

eclipse alt + shift + s

자바는 logical오류까지 있다.  10분 이내쪽에서 들어보기
프로그래밍의 강인성  : 어떠한 상황 속에서도 프로그램은 진행되어야 한다.
따라서 try catch문이 존재한다.

class설계자는 충분한 서비스를 제공해줘야 한다.

파일 오픈할 때,
try{
파일 오픈
}catch{
파일 오픈 실 했을 경우
} finally {
파일을 닫아준다.
}

변수는 선언 ,생성, 참조 순이다.
다중 catch문에서는 작은 클래스부터 큰 순서대로 catch문을 사용한다.

시큐어 코딩 가이드 에서
자바에선 어떤 예외처리가 어떻게 일어나는지 알아야 한다.

그 클래스에서 39분이내 확인!

공유자원에 동시에 접근할 때, 문제가 생긴다. 
프로세스 안에 어려개의 스레드(LWP= 경량 프로세스)가 존재한다.

스레드를 고려할때, 순서를 고려해야 한다.

runnable = wait :
프로세서에서의 running : cpu의 프로세서를 이용하고 있는 상태 
실행중인 프로세스의 상태는 runnable, running, blocked 밖에 없다.

thread의 순서는 알 수 없다. 따라서 join을 사용한다.

synchoronized를 하면 임계 영역이 설정된다.

멀티스레드 프로그래밍은 파이프라인보다 좀더 큰 개념이라 보는 것이 맞다.
파이프라인에서 하나의 instruction을 다중열로 처리하는 것인데 
멀티 스레드 프로그래밍에서는 스레드 하나가 작업을 하나하나 수행하는 것이므로
멀티 스레드가 조금 더 큰 개념이라고 봐야 하는 것이 맞다.

그렇기 때문에 멀티스레드 프로그래밍에서 파이프라인 안에 생기는 해저드와
차이는 분명히 존재한다.

Thread.sleep(1000)은 1초 정도를 의미한다.

윈도우 프로세서에서 효율적으로 확인할 수 있으

실행 대기 : Ready Q
실행은 1개만 (running상태)
밑줄쳐진 것은 지웠다.

끄려면 running 
1.run method를 정상적으로  종료시키는 것
2. interrupt()를 설정한다. 

join()은 main thread가 blocked된다.

데몬 스레드는 보조적은 역할 수행하는 스레드

람다식은 함수형 언어를 제공하기 위해서 만들었습니다.

사용자 interaction이 view에서 처리되어야 한다는 것은 차이가 있다.
이것을 control로 보내야 한다고 생각하는 사람도 있고 
view에 interaction을 처리하는 class를 설정해도 된다고 얘기하는 사람도 존재한다.

Collection Framework에선 list,set,map을 바로 사용할 수 있게 구현한 상태를 
사용할 수 있도록 만들어준다.

실제 필드에선 구조를 사용하는 것은 구조를 검증된 라이브러리를 사용한다.

프로세스 안에 여러개의 스레드가 있는데
하나의 스레드를 lock하면 전체 프로세스가 lock되어 버릴 수도 있다.

kernel level thread를 제공해주면 괜찮다.

네트워크 프로그래밍의 개요

parser를 개발할 수 있다.

톡은 1:1 피어 투 피어
서버는 서버를 만들고 여러 개의 클라이언트들이 연결되서 사용될 수 있도록 
만들었습니다.

대부분은 모든걸 전부다 만들지 않는다. API를 사용한다.
JSON파서는 여러가지이다.(Gson)

Model과 View의 관계를 끊으면서 control에서 interaction을 받게된다

메세지 설계에서 웹페이지에서 사용한다. 
ex. asd?vqeqw?.... 로 만들어진다.

카카오톡 초기버전이 방을 만들 때, arraylist를 만들어서 사용했습니다.

java 

접근자 
private
protected
public 
default : 명시하지 않는 접근자, 같은 패키지 안에서 사용할 수 있다.

run()를 정상적으로 종료시키는 방법
run() method 를 정상 루틴으로 종료한다.
interrupt를 호출해서 종료시킨다.

status= 상태 정보(STOP 플래그)

JSON -> parser -> 객체로 

json형식을 사용하는 경우
1.parser를 사용하는 경우 
2.문자열을 받아주는 경우

view 객체와 model객체를 가지게 된다.

string에서 조건을 형성해서 secret 모드를 추가할 수 있도록 한다.

백엔드에서 프론트엔드 순으로 얘기할 수 있도록 합니다.

message.class 객체 활용
class e = message.class 
클래스이름 , 클래스에 있는 필드명을 가지고 parser를 구현하는데 도움을 준다.
factory~~  
ex)
if("id")
   return new userDAO;
else if ("product")
   return new product;
->method를 설정하고 필드 네임을 받을 수 있다!!





2020-01-04 심화객체기술 
java에선 JFC 메세지 맵에 대한 건 내가 직접 다룬다.
c++에선 MFC 메세지 맵이 숨겨져 있어서 닷넷플렛폼에서 전부 제공해줍니다.
툴에서 모든 것을 관리한다. 조금 무겁다.

국내 플랫폼 1위는 java 그만큼 수요도 많고 공급도 많다.  
사피: 삼성 교육 과정 - mfc는 수요가 적다. 하지만 틈새시장으로써 공략을 할 수 있다.

mfc 특징 
document_View파트를 만들 수 있습니다.

  -Main Frame
document_View
Data     -    UI

ADT level : 무엇을 하는지  결정하는 것
Implementation level : 어떻게 할 것인지 결정하는 것 (구현 방법 결정)
Application level : test를 한다.

java는 설계+구현이 동시에 이루어진다. 
c++의 기초는 설계와 구현이 나누어져 있다. \\

rotation 
- 스네이크 : sub_init()
- 파스칼 : SetValue ex) c++, c# 등에 사용합니디.
- 카멜(헝가리) : initState ex)java에서 사용(대부분)

class()
memeber value : int m_value; 멤버 변수들은 이렇게 쓴다.
memeber function : 파스칼 언어로 사용한다.
나머지는 낙타체

모든 클래스는 대문자 C로 시작한다. 
여러 단어를 이어서 식별자 이름으로 사용할 때는 각 단어의 첫 글자를 대문자로 표기한다.
클래스의 멤버변수는 접두어 m_를 붙여서 다른 지역변수와 구분한다. 
멤버함수의 이름은 대문자로 시작한다. 
전역함수에는 접두어 Afx를 붙인다.

mdi 
sdi : single do
dialog 

DLL 필요할 때마다 프로그램을 연결해서 사용합니다.

